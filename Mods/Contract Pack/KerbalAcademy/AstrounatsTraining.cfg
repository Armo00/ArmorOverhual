// Modified 2024-04-09

CONTRACT_TYPE
{
    name = KerbalAcademy_PilotingTraining
    title = Kerbal Academy: Pilot Training Program
    group = KerbalAcademy
    description = It seems that a group of pilots is ready to improve their piloting skills. Take them to @targetVessel, along with 2 mentors to train them, then bring them back home.
    genericDescription = Put a gourp of pilots throught the training Program.
    synopsis = Complete the training course.
    completedMessage = Congratulations, we now have more experienced pilots on our team
    agent = Kerbal Academy
    notes = The parameters must be completed in order.
    minExpiry = 1
    maxExpiry = 7
    maxSimultaneous = 1
    cancellable = true
    declinable = true
    prestige = Significant
    targetBody = HomeWorld()
    rewardScience = 0.0
    rewardReputation = 10
    rewardFunds = 0
    failureReputation = 0
    failureFunds = 0
    advanceFunds = -50000 - @crew_size * 20000

    DATA
    {
        type = List<Kerbal>
        uniquenessCheck = CONTRACT_ACTIVE
        all_candidates = AllKerbals().Where(m => m.ExperienceTrait() == Pilot && m.ExperienceLevel()<= 2 && m.Type() == Crew && m.RosterStatus() == Available)
        trainee_list = @all_candidates.Random(@crew_size)
        title = Must have a group of Kerbals who qualify for the basic program.
    }

    DATA
    {
        type = int
        selectionIndex = Random(0, @validOTFs.Count() - 1)
        crew_size = @is_random_crewsize ? 2 : Random(3, 6)
    }

    DATA
    {
        type = double
        expAward = 8
    }

    DATA
    {
        type = bool     
        is_random_crewsize = 6 < @all_candidates.Count()
    }

    DATA
    {
        type = List<VesselIdentifier>
        requiredValue = false
        validOTFs = $KerbalAcademy_OrbitalTraingFacility.Where(vi => Vessel(vi).IsOrbiting() && Vessel(vi).EmptyCrewSpace() >= 8)
    }

    DATA
    {
        type = Vessel
        uniquenessCheck = CONTRACT_ACTIVE
        title = Must have an Orbital Training Facility with sufficient empty space
        targetVessel = @validOTFs.ElementAt(@selectionIndex)
    }

    BEHAVIOUR
    {
        name = AwardExperience
        type = AwardExperience
        onState = CONTRACT_COMPLETED
        kerbal = @/trainee_list
        experience = @/expAward
    }

    
    PARAMETER
    {	
        name = HasTrainee
        type = HasCrew
        kerbal = @/trainee_list
    }

    PARAMETER
    {
        name = HasMentor
        type = HasCrew
        trait = Pilot
        title = Must have an experienced Pilot on board
        minExperience = 4
    }

    PARAMETER
    {
        name = HasCommander
        type = HasCrew
        trait = Commander
        title = Must have a commander to oversee the training
        minExperience = 2
    }

    PARAMETER
    {
        name = DockwithStation
        type = Docking
        vessel = @/targetVessel
        title = Dock with @/targetVessel
        completeInSequence = true
    }

    PARAMETER
    {
        name = Duration
        type = Duration
        duration = 15d
        preWaitText = Waiting for the Crew.
        waitingText = Crew at the station
        completionText = Mission accomplished! Bring the crew back home.
        completeInSequence = true
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal
        completeInSequence = true
        kerbal = @/trainee_list
    }

    REQUIREMENT
    {
        name = check_crew_count
        type = Expression
        expression = @all_candidates.Count() > 1
        title = Must enough crew
    }
 
}

+CONTRACT_TYPE[KerbalAcademy_PilotingTraining]:Final
{
    @name = KerbalAcademy_EngineeringTraining
    @title = Kerbal Academy: Engineer Training Program
    @description = It seems that a group of engineers is ready to improve their skills. Take them to @targetVessel, along with 2 mentors to train them, then bring them back home.
    @genericDescription = Put a gourp of engineers throught the training Program.
    @completedMessage = Congratulations, we now have more experienced engineers on our team

    @DATA:HAS[#type[List<Kerbal>]]
    {
        @all_candidates = AllKerbals().Where(m => m.ExperienceTrait() == Engineer && m.ExperienceLevel()<= 2 && m.Type() == Crew && m.RosterStatus() == Available)
    }
    @PARAMETER:HAS[#name[HasMentor]]
    {
        @trait = Engineer
        @title = Must have an experienced Engineer on board
    }
}

+CONTRACT_TYPE[KerbalAcademy_PilotingTraining]:Final
{
    @name = KerbalAcademy_ScienceTraining
    @title = Kerbal Academy: Scientist Training Program
    @description = It seems that a group of scientists is ready to improve their skills. Take them to @targetVessel, along with 2 mentors to train them, then bring them back home.
    @genericDescription = Put a gourp of scientists throught the training Program.
    @completedMessage = Congratulations, we now have more experienced scientists on our team

    @DATA:HAS[#type[List<Kerbal>]]
    {
        @all_candidates = AllKerbals().Where(m => m.ExperienceTrait() == Scientist && m.ExperienceLevel()<= 2 && m.Type() == Crew && m.RosterStatus() == Available)
    }
    @PARAMETER:HAS[#name[HasMentor]]
    {
        @trait = Scientist
        @title = Must have an experienced Scientist on board
    }
}

+CONTRACT_TYPE[KerbalAcademy_PilotingTraining]:Final
{
    @name = KerbalAcademy_DoctorTraining
    @title = Kerbal Academy: Doctor Training Program
    @description = It seems that a group of doctors is ready to improve their medical skills. Take them to @targetVessel, along with 2 mentors to train them, then bring them back home.
    @genericDescription = Put a gourp of doctors throught the training Program.
    @completedMessage = Congratulations, we now have more experienced doctors on our team

    @DATA:HAS[#type[List<Kerbal>]]
    {
        @all_candidates = AllKerbals().Where(m => m.ExperienceTrait() == Medical && m.ExperienceLevel()<= 2 && m.Type() == Crew && m.RosterStatus() == Available)
    }
    @PARAMETER:HAS[#name[HasMentor]]
    {
        @trait = Medical
        @title = Must have an experienced Doctor on board
    }
}

+CONTRACT_TYPE[KerbalAcademy_PilotingTraining]:Final
{
    @name = KerbalAcademy_CommanderTraining
    @title = Kerbal Academy: Commander Training Program
    @description = It seems that a group of Commanders is ready to improve their medical skills. Take them to @targetVessel, along with 2 mentors to train them, then bring them back home.
    @genericDescription = Put a gourp of Commanders throught the training Program.
    @completedMessage = Congratulations, we now have more experienced Commanders on our team

    @DATA:HAS[#type[List<Kerbal>]]
    {
        @all_candidates = AllKerbals().Where(m => m.ExperienceTrait() == Commander && m.ExperienceLevel()<= 2 && m.Type() == Crew && m.RosterStatus() == Available)
    }
    @PARAMETER:HAS[#name[HasMentor]]
    {
        @trait = Commander
        @title = Must have an experienced Commander on board
    }
}


    
		
		

		