// Modified 2024-04-08

CONTRACT_TYPE
{
    name = KerbalAcademy_Recruits_Scientists
    title = Train a new group of scientists
    group = KerbalAcademy
    description = It seems like that we need more scientists in our Astronaut Corp. A group of scientists is waiting to be trained. Bring the them and some instructors to a long term station, and when they come home we will see which ones are good candidates for joining the space program.
    genericDescription = A group of candidates is ready for training. Complete the mission and see who is ready to join the space program.
    synopsis = Bring @touristCount candidates to the station. Some will join our space program when they return.
    completedMessage = This was a great success, we have got 6 new scientists: (@/candidates.ElementAt(0)), (@/candidates.ElementAt(1)), (@/candidates.ElementAt(2)), (@/candidates.ElementAt(3)), (@/candidates.ElementAt(4)) and (@/candidates.ElementAt(5)) ready for future missions!
    agent = Kerbal Academy

    minExpiry = 1
    maxExpiry = 7
    cancellable = true
    maxSimultaneous = 1
    declinable = true
    prestige = Significant
    targetBody = HomeWorld()
    rewardScience = 0.0
    rewardReputation = 0.0
    rewardFunds = 0
    failureReputation = 0
    failureFunds = 0
    advanceFunds = -100000 - @/touristCount * 25000

    DATA
    {
        type = List<VesselIdentifier>
        requiredValue = false
        validOTFs = $KerbalAcademy_OrbitalTraingFacility.Where(vi => Vessel(vi).IsOrbiting() && Vessel(vi).EmptyCrewSpace() >= 10)
    }

    DATA
    {
        type = int
        touristCount = Random(12, 16)
        selectionIndex = Random(0, @validOTFs.Count() - 1)
    }

    DATA
    {
        type = Vessel
        uniquenessCheck = CONTRACT_ACTIVE
        title = Must have an Orbital Training Facility with sufficient empty space
        targetVessel = @validOTFs.ElementAt(@selectionIndex)
    }

    DATA
    {
        type = List<Kerbal>
        hidden = true
        tourists = NewKerbals(@touristCount - 6)
        candidates = NewKerbals(6)
        // Use the Random function to shuffle the list around
        allPassengers = @tourists.Concat(@candidates).Random(@touristCount)
    }

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup
        vessel = @/targetVessel
        title = Bring the candidates to the Orbital Training Facility to complete traing course
        duration = 20d

        PARAMETER
        {
            name = HasCrew
            type = HasCrew
            trait = Scientist
            title = Crew: Experienced Scientists
            minExperience = 2
            hideChildren = true
        }


        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers
            kerbal = @/allPassengers
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal
        completeInSequence = true
        kerbal = @/allPassengers
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers
        kerbal = @/tourists
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers
        kerbal = @/candidates
        removePassengers = false
    }

    BEHAVIOUR
    {
        name = Expression
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            TouristCount = TouristCount + @Tourism:touristCount
        }
    }

    BEHAVIOUR
    {
        type = ChangeKerbalType
        onState = CONTRACT_COMPLETED
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(0)
            trait = Scientist
            kerbalType = Crew
        }

        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(1)
            trait = Scientist
            kerbalType = Crew
        }

        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(2)
            trait = Scientist
            kerbalType = Crew
        }

        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(3)
            trait = Scientist
            kerbalType = Crew
        }
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(4)
            trait = Scientist
            kerbalType = Crew
        }
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(5)
            trait = Scientist
            kerbalType = Crew
        }
    }

    BEHAVIOUR
    {
        type = AwardExperience
        experience = 3
        kerbal = @/candidates
    }

    REQUIREMENT
    {
        type = Expression
        expression = @/KerbalAcademy_OrbitalTraingFacility.Count() > 0
        title = Must have an Orbital Training Facility ten empty crew spaces
    }

    REQUIREMENT
    {
        type = HasAstronaut
        trait = Scientist
        minExperience = 2
    }

    REQUIREMENT
    {
        name = CompleteContract
        type = CompleteContract
        contractType = KerbalAcademy_Recruits_Scientists
        checkOnActiveContract = false
        minCount = 0
        cooldownDuration = 15d
    }
}

+CONTRACT_TYPE[KerbalAcademy_Recruits_Scientists]:Final
{
    @name = KerbalAcademy_Recruits_Engineers
    @title = Train a new group of engineers
    @description = It seems like that we need more engineers in our Astronaut Corp. A group of engineers is waiting to be trained. Bring the them and some instructors to a long term station, and when they come home we will see which ones are good candidates for joining the space program.
    @completedMessage = This was a great success, we have got 6 new engineers: (@/candidates.ElementAt(0)), (@/candidates.ElementAt(1)), (@/candidates.ElementAt(2)), (@/candidates.ElementAt(3)), (@/candidates.ElementAt(4)) and (@/candidates.ElementAt(5)) ready for future missions!

    @PARAMETER:HAS[#type[VesselParameterGroup]]
    {
        @PARAMETER:HAS[#type[HasCrew]]
        {
            @trait = Engineer
            @title = Crew: Experienced Engineers
        }
    }

    @BEHAVIOUR:HAS[#type[ChangeKerbalType]]
    {
        @KERBAL_INFO,*
        {
            @trait = Engineer
        }
    }

    @REQUIREMENT:HAS[#type[HasAstronaut]]
    {
        @trait = Scientist
    }

    @REQUIREMENT:HAS[#type[CompleteContract]]
    {
        @contractType = KerbalAcademy_Recruits_Engineers
    }
}

+CONTRACT_TYPE[KerbalAcademy_Recruits_Scientists]:Final
{
    @name = KerbalAcademy_Recruits_Pilots
    @title = Train a new group of pilot
    @description = It seems like that we need more pilots in our Astronaut Corp. A group of pilots is waiting to be trained. Bring the them and some instructors to a long term station, and when they come home we will see which ones are good candidates for joining the space program.
    @completedMessage = This was a great success, we have got 6 new pilots: (@/candidates.ElementAt(0)), (@/candidates.ElementAt(1)), (@/candidates.ElementAt(2)), (@/candidates.ElementAt(3)), (@/candidates.ElementAt(4)) and (@/candidates.ElementAt(5)) ready for future missions!

    @PARAMETER:HAS[#type[VesselParameterGroup]]
    {
        @PARAMETER:HAS[#type[HasCrew]]
        {
            @trait = Pilot
            @title = Crew: Experienced pilot
        }
    }

    @BEHAVIOUR:HAS[#type[ChangeKerbalType]]
    {
        @KERBAL_INFO,*
        {
            @trait = Pilot
        }
    }

    @REQUIREMENT:HAS[#type[HasAstronaut]]
    {
        @trait = Pilot
    }

    @REQUIREMENT:HAS[#type[CompleteContract]]
    {
        @contractType = KerbalAcademy_Recruits_Pilots
    }
}