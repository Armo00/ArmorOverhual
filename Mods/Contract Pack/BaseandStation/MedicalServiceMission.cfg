// Modified 2024-04-01

CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = MedicalMission
    title = Medical Mission to @/targetVessel1
    genericTitle = Space Station Commercial Crew Mission
    group = BasesandStations
    description = Launch a Medical Mission to @/targetVessel1.
    genericDescription =  @/targetKerbal1 is very sick and require urgent medical surgery. Send a crew of medical expert to the station to perform the surgery. Do it fast, do it right.
    synopsis =  Send a medical crew to @/targetVessel1.
    completedMessage = Mission Complete! Another life saved today.
    prestige = Significant
    minExpiry = 1
    maxExpiry = 7
    deadline = 10
    
    cancellable = false
    declinable = false
    maxSimultaneous = 1
    
    rewardScience = 0.0
    rewardReputation = Random(1, 5.0)
    rewardFunds = 750000
    failureReputation = Random(10, 50)
    failureFunds = Random(1000000, 3000000)
    advanceFunds = Random(50000, 100000)
    
    targetBody = @/targetBody1
    
    DATA
    {
        type = CelestialBody
        requiredValue = true
        targetBody1 = @/targetVessel1.CelestialBody()
        hidden = true
    }
    
    DATA
    {
        type = Vessel
        uniquenessCheck = GROUP_ACTIVE
        requiredValue = true
        targetVessel1 = AllVessels().Where(v => v.VesselType() == Station).SelectUnique()
        title = Must have a station
    }
    REQUIREMENT
    {
        name = StationCheck
        type = Expression
        expression = (@/targetVessel1.IsOrbiting())
        title = The station must be in orbit
    }

    DATA
	{
		type = Kerbal
		uniquenessCheck = GROUP_ACTIVE
		targetKerbal1 = @targetVessel1.Crew().Random()
		title = Finding a sick Kerbal.
	}

    PARAMETER
    {
        name = All
        type = All
    
        PARAMETER
        {
            name = DockwithStation
            type = Docking
            vessel = @/targetVessel1
            title = Dock with @/targetVessel1
        }
        
        PARAMETER
        {
            name = HasCrew
            type = HasCrew
            minCrew = 2
            trait = Medical
            disableOnStateChange = true
            hideChildren = true
            title = Have at least 2 medical experts on board
        }

        PARAMETER
        {
            name = HasCrew
            type = HasCrew
            minCrew = 4
            disableOnStateChange = true
            hideChildren = true
            title = Have another 2 crew members to help
        }
    }

    PARAMETER
    {
        name = Duration
        type = Duration
        duration = 7d
        preWaitText = Waiting for the Medical Team.
        waitingText = Team arrived at the station, performing surgery
        completionText = Mission accomplished! 
        completeInSequence = true
    }

    REQUIREMENT
    {
        name = Expression
        type = Expression
        checkOnActiveContract = false
        expression = @BasesandStations:randomRoll >3
        title = The RNG must like you
    }
}