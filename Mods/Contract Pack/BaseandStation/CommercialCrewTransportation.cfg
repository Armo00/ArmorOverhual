// Modified 2024-04-08

CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = CCTSmissionStation
    title = Commercial Crew Mission to @/targetVessel1
    genericTitle = Space Station Commercial Crew Mission
    group = BasesandStations
    description = Launch a Commercial Crew Mission to @/targetVessel1.
    genericDescription = Send a crew to a Space Station, do some work, then bring them back home alive.
    synopsis =  Send a crew to @/targetVessel1.
    completedMessage = Mission Complete! The returned crew members are going for a pint. Care to join?
    prestige = Significant
    minExpiry = 1
    maxExpiry = 7
    
    cancellable = true
    declinable = true
    maxSimultaneous = 3
    
    rewardScience = 0.0
    rewardReputation = Random(1, 5.0)
    rewardFunds = 150000 + @/CrewNum * 80000
    failureReputation = Random(1, 5.0)
    failureFunds = Random(1, 10000.0)
    advanceFunds = Random(10000, 20000)
    
    targetBody = @/targetBody1

    DATA
    {
        type = int
        hidden = true
        CrewNum = Random(2, 4)
        additionalPayloadSpecialistNum = Random(1,3)
    }
    
    DATA
    {
        type = CelestialBody
        requiredValue = true
        targetBody1 = @/targetVessel1.CelestialBody()
        hidden = true
    }
    
    DATA
    {
        type = Vessel
        uniquenessCheck = GROUP_ACTIVE
        requiredValue = true
        targetVessel1 = AllVessels().Where(v => v.VesselType() == Station).SelectUnique()
        title = Must have a station
    }
    REQUIREMENT
    {
        name = StationCheck
        type = Expression
        expression = (@/targetVessel1.IsOrbiting())
        title = The station must be in orbit
    }

    PARAMETER
    {
        name = All
        type = All
    
        PARAMETER
        {
            name = DockwithStation
            type = Docking
            vessel = @/targetVessel1
            title = Dock with @/targetVessel1
        }
        
        PARAMETER
        {
            name = HasCrew
            type = HasCrew
            minCrew = 1
            trait = PayloadSpecialist
            disableOnStateChange = true
            hideChildren = true
            title = Have at least one PayloadSpecialists on board
        }
        PARAMETER
        {
            name = HasCrew
            type = HasCrew
            minCrew = @/CrewNum
            disableOnStateChange = true
            hideChildren = true
            title = Bring a crew of @/CrewNum to the station
        }
    }
    PARAMETER
    {
        name = AdditionCrew
        type = All
        title = (Optional) Bring Addition Payload Specialist(s).
        optional = True

        // Parameter rewards
        // rewardFunds = Random(100000, 240000)
        rewardFunds = @/additionalPayloadSpecialistNum * 80000
        
        PARAMETER
        {
            name = HasCrew
            type = HasCrew
            minCrew = 1 + @/additionalPayloadSpecialistNum
            trait = PayloadSpecialist
            disableOnStateChange = true
            hideChildren = true
            title = Have another @/additionalPayloadSpecialistNum PayloadSpecialist(s) on board
        }
        PARAMETER
        {
            name = DockwithStation
            type = Docking
            vessel = @/targetVessel1
            title = Dock with @/targetVessel1
            completeInSequence = true
        }
        PARAMETER
        {
            name = Duration
            type = Duration
            duration = 180d
            preWaitText = Waiting for the Crew.
            waitingText = Crew at the station
            completionText = Mission accomplished! Bring the crew back home.
            completeInSequence = true
        }
    }
    PARAMETER
    {
        name = Duration
        type = Duration
        duration = 180d
        preWaitText = Waiting for the Crew.
        waitingText = Crew at the station
        completionText = Mission accomplished! Bring the crew back home.
        completeInSequence = true
    }
    PARAMETER
    {
        name = ReturnHome
        type = ReturnHome
        title = Bring the crew back home.
        completeInSequence = true
    }
    REQUIREMENT
    {
        name = Expression
        type = Expression
        checkOnActiveContract = false
        expression = @BasesandStations:randomRoll >3
        title = The RNG must like you
    }
}

@CONTRACT_TYPE[CrewRotation]:Final
{
    @rewardFunds = 100000 + @/targetVessel1.CrewCount() * 30000 + Random(40000, 60000.0)
}

// Commercial Crew to Base
CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = CCTSmissionBase
    title = Commercial Crew Mission to @/targetVessel1
    genericTitle = Off-world Base Commercial Crew Mission
    group = BasesandStations
    description = Launch a Commercial Crew Mission to @/targetVessel1.
    genericDescription = Send a crew to a Off-world Base, do some work, then bring them back home alive.
    synopsis =  Send a crew to @/targetVessel1.
    completedMessage = Mission Complete! The returned crew members are going for a pint. Care to join?
    prestige = Significant
    minExpiry = 1
    maxExpiry = 7
    
    cancellable = true
    declinable = true
    maxSimultaneous = 3
    
    rewardScience = 0.0
    rewardReputation = Random(1, 5.0)
    rewardFunds = 200000 + @/CrewNum * 100000
    failureReputation = Random(1, 5.0)
    failureFunds = Random(1, 10000.0)
    advanceFunds = Random(10000, 20000)
    
    targetBody = @/targetBody1

    DATA
    {
        type = int
        hidden = true
        CrewNum = Random(1, 3)
        additionalPayloadSpecialistNum = Random(1,2)
    }
    
    DATA
    {
        type = CelestialBody
        requiredValue = true
        targetBody1 = @/targetVessel1.CelestialBody()
        hidden = true
    }
    
    DATA
    {
        type = Vessel
        uniquenessCheck = GROUP_ACTIVE
        requiredValue = true
        targetVessel1 = AllVessels().Where(v => v.VesselType() == Base&& v.IsLanded()).SelectUnique()
        title = Must have a Base
    }

    DATA
    {
        type = Location
        vesselLocation = @/targetVessel1.Location()
        hidden = true
    }

    BEHAVIOUR
    {
        name = WaypointGenerator
        type = WaypointGenerator
        WAYPOINT
        {
            name = Base Landing Spot
            targetBody = @/targetBody1
            icon = balloon
            altitude = 0.0
            latitude = @/vesselLocation.Latitude()
            longitude = @/vesselLocation.Longitude()
        }
    }

    PARAMETER
    {
        name = All
        type = All

        PARAMETER
        {
            name = NewVessel
            type = NewVessel
            completeInSequence = true
        }


        PARAMETER
        {
            name = VisitWaypoint
            type = VisitWaypoint
            index = 0
            distance = 2000.0
            title = Land near @/targetBody1
            showMessages = true
            completeInSequence = true
        }
        
        PARAMETER
        {
            name = HasCrew
            type = HasCrew
            minCrew = 1
            trait = Colonist
            disableOnStateChange = true
            hideChildren = true
            title = Have at least one Colonist on board
        }
        PARAMETER
        {
            name = HasCrew
            type = HasCrew
            minCrew = @/CrewNum
            disableOnStateChange = true
            hideChildren = true
            title = Bring a crew of @/CrewNum to the base
        }
        PARAMETER
        {
            name = Duration
            type = Duration
            duration = 180d
            preWaitText = Waiting for the Crew.
            waitingText = Crew at the Base
            completionText = Mission accomplished! Bring the crew back home.
            completeInSequence = true
        }
        PARAMETER
        {
            name = ReturnHome
            type = ReturnHome
            title = Bring the crew back home.
            completeInSequence = true
        }
    }
    PARAMETER
    {
        name = AdditionCrew
        type = All
        title = (Optional) Bring Addition Colonist(s).
        optional = True

        // Parameter rewards
        // rewardFunds = Random(150000, 200000)
        rewardFunds = @/additionalPayloadSpecialistNum * 100000

        PARAMETER
        {
            name = NewVessel
            type = NewVessel
            completeInSequence = true
        }


        PARAMETER
        {
            name = VisitWaypoint
            type = VisitWaypoint
            index = 0
            distance = 2000.0
            title = Land near @/targetBody1
            showMessages = true
            completeInSequence = true
        }
        
        PARAMETER
        {
            name = HasCrew
            type = HasCrew
            minCrew = 1 + @/additionalPayloadSpecialistNum
            trait = Colonist
            disableOnStateChange = true
            hideChildren = true
            title = Have another @/additionalPayloadSpecialistNum Colonist(s) on board
        }
        PARAMETER
        {
            name = Duration
            type = Duration
            duration = 180d
            preWaitText = Waiting for the Crew.
            waitingText = Crew at the Base
            completionText = Mission accomplished! Bring the crew back home.
            completeInSequence = true
        }
    }
    REQUIREMENT
    {
        name = Expression
        type = Expression
        checkOnActiveContract = false
        expression = @BasesandStations:randomRoll >3
        title = The RNG must like you
    }
}

// PayloadSpecialist to Station Mission
@CONTRACT_TYPE[PayloadSpecialist]:Final
{
    @rewardFunds = 80000 + @/targetVessel1.CrewCount() * 20000
}
