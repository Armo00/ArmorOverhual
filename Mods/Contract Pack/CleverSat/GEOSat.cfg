// Modified 2023-08-16

CONTRACT_TYPE
{
    name = CleverSatGEO
    title = Put a new Satellite in Geostationary Orbit
    genericTitle = Put a new Satellite in Geostationary orbit.
    group = CleverSat
    description = Someone is willing to pay us big bucks to build and launch a satellite into thr Geostationary Orbit for them. 
    synopsis = Launch a satellite into the Geostationary orbit.
    completedMessage = Well, that should hold them for a while. Until they ask us to move the thing of course.
    targetBody = HomeWorld()
    //debug line turn this off later
    maxSimultaneous = 5
    //end debug line
    rewardFunds = Random(350000,600000)
    rewardReputation = Random(2.0, 5.0)
    
    DATA
    {
        type = double
        G = 6.67384 * Pow(10, -11)
        t = @targetBody.RotationalPeriod()
        pi = 3.14159265359
        keoAltitude = Pow(@G * @targetBody.Mass() * @t * @t / 4.0 / @pi / @pi, 1.0 / 3.0) - @targetBody.Radius()
    }

    BEHAVIOUR
    {
        name = KEO
        type = OrbitGenerator

        FIXED_ORBIT
        {
            ORBIT
            {
                SMA = @/keoAltitude + @/targetBody.Radius()
                ECC = 0
                INC = 0
                LPE = 270.097584818355
                LAN = 263.709641058871
                MNA = 1.56901658088753
                EPH = 122896.298156917
                REF = 1
            }
        }
    }
    
    PARAMETER
    {
        name = SatOrbit
        type = VesselParameterGroup
        defineList = SatList
        disableOnStateChange = false

        PARAMETER
        {
            name = HasCrewCapacity
            type = HasCrewCapacity
            maxCapacity = 0
        }
            
        PARAMETER
        {
            name = ReachSpecificOrbit
            type = ReachSpecificOrbit
            index = 0
            //credits to nightingale for this one. Should make prestige match difficulty of contract.
            deviationWindow = Prestige() == Trivial ? 10.0 : Prestige() == Significant ? 7.0 : 5.0
        }
    }
    PARAMETER
    {
        name = Duration
        type = Duration
        startCriteria = PARAMETER_COMPLETION
        parameter = SatOrbit
        duration = 10s
        preWaitText = waiting for correct orbit.
        waitingText = calibrating orbit
        completionText = calibration completed
    }


    REQUIREMENT
    {
        name = Any
        type = Any
        REQUIREMENT
        {
            name = PartModuleUnlocked
            type = PartModuleUnlocked
            partModule = ModuleDeployableSolarPanel
        }
        REQUIREMENT:NEEDS[NearFutureSolar]
        {
            name = PartModuleUnlocked
            type = PartModuleUnlocked
            partModule = ModuleCurvedSolarPanel
        }
    }

    REQUIREMENT
    {
        name = Probe
        type = PartUnlocked
        part = probeCoreSphere
    }
    REQUIREMENT
    {
        name = Expression
        type = Expression
        checkOnActiveContract = false
        expression = @CleverSat:RNG >2
        title = The RNG must like you.
    }
}
