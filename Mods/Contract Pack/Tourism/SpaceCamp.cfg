// Modified 2023-08-17

// Space Camp
@CONTRACT_TYPE[Tourism_SpaceCamp]
{
    @completedMessage = This was a great success, we have got 2 new pilots: (@/candidates.ElementAt(0)) and (@/candidates.ElementAt(1)), 2 new engineers: (@/candidates.ElementAt(2)) and (@/candidates.ElementAt(3)),  2 new scientists: (@/candidates.ElementAt(4)) and (@/candidates.ElementAt(5)), a payloadSpecialist: (@/candidates.ElementAt(6)) and a medical stuff: (@/candidates.ElementAt(7)) ready for future missions!
    @rewardFunds = 250000 + Random(10000, 60000.0)
    @DATA,0
    {
        @touristCount = Random(24, 36)
    }
    @DATA,1
    {
        @tourists = NewKerbals(@touristCount - 8)
        @candidates = NewKerbals(8)
    }
    @BEHAVIOUR::HAS[#onState[CONTRACT_COMPLETED]]
    {
        !KERBAL_INFO,*{}
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(0)
            trait = Pilot
            kerbalType = Crew
        }
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(1)
            trait = Pilot
            kerbalType = Crew
        }

        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(2)
            trait = Engineer
            kerbalType = Crew
        }
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(3)
            trait = Engineer
            kerbalType = Crew
        }

        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(4)
            trait = Scientist
            kerbalType = Crew
        }
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(5)
            trait = Scientist
            kerbalType = Crew
        }
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(6)
            trait = PayloadSpecialist
            kerbalType = Crew
        }
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(7)
            trait = Medical
            kerbalType = Crew
        }
    }
}

// Base Camp
CONTRACT_TYPE
{
    name = Tourism_BaseCamp
    group = Tourism
    sortKey = 06.Camp
    title = Hold a off-world base camp
    description = Mortimer is constantly complaining about the cost of hiring new astronauts.  Rather than wasting our funds on training recruits, or picking up whichever Kerbals happen to be need of rescue from low Kerbin orbit, we should set up a base camp, and train paid tourists to join the space program!  Bring the tourists and some instructors to a long term off world base, and when they come home we will see which ones are good candidates for joining the space program.
    synopsis = Bring @touristCount tourists into a off world base.  Some will join our space program when they return.

    completedMessage = This was a great success, we have got a new pilot (@/candidates.ElementAt(0)), a new engineer: (@/candidates.ElementAt(1)), a new scientist: (@/candidates.ElementAt(2)), a payloadSpecialist: (@/candidates.ElementAt(3)) and 2 new colonists: (@/candidates.ElementAt(4)) and (@/candidates.ElementAt(5)) ready for future missions!

    // Level 2 prestige
    prestige = Significant

    targetBody = HomeWorld()

    agent = Kerbal Space Tourism

    // Can only have one at a time
    maxSimultaneous = 1

    // Contract rewards
    @rewardFunds = 350000 + Random(10000, 60000.0)
    rewardReputation = 20.0
    failureReputation = 50.0

    DATA
    {
        type = int
        touristCount = Random(12, 16)
    }

    DATA
    {
        type = Vessel
        uniquenessCheck = CONTRACT_ACTIVE
        title = Must have a base with sufficient empty space
        targetVessel = AllVessels().Where(v => v.VesselType() == Base).Where(v => HomeWorld().Children().Contains(v.CelestialBody()) && v.IsLanded() && v.EmptyCrewSpace() > @/touristCount).Random()
    }

    DATA
    {
        type = List<Kerbal>

        hidden = true

        tourists = NewKerbals(@touristCount - 6)
        candidates = NewKerbals(6)

        // Use the Random function to shuffle the list around
        allPassengers = @tourists.Concat(@candidates).Random(@touristCount)
    }

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup
        vessel = @/targetVessel
        title = Bring the candidates to the base
        duration = 40d

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot

            title = Crew: A Pilot
            hideChildren = true
        }

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Engineer

            title = Crew: An Engineer
            hideChildren = true
        }

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Scientist

            title = Crew: A Scientist
            hideChildren = true
        }

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            minExperience = 2

            title = Crew: Experience Level 2 (at least one)
            hideChildren = true
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers

            kerbal = @/allPassengers
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        completeInSequence = true
        kerbal = @/allPassengers
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        kerbal = @/tourists
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        kerbal = @/candidates
        removePassengers = false
    }

    BEHAVIOUR
    {
        name = Expression
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            TouristCount = TouristCount + @Tourism:touristCount
        }
    }

    BEHAVIOUR
    {
        type = ChangeKerbalType
        onState = CONTRACT_COMPLETED
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(0)
            trait = Pilot
            kerbalType = Crew
        }

        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(1)
            trait = Engineer
            kerbalType = Crew
        }

        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(2)
            trait = Scientist
            kerbalType = Crew
        }

        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(3)
            trait = PayloadSpecialist
            kerbalType = Crew
        }
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(4)
            trait = Colonist
            kerbalType = Crew
        }
        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(5)
            trait = Colonist
            kerbalType = Crew
        }
    }

    BEHAVIOUR
    {
        type = AwardExperience
        experience = 3
        kerbal = @/candidates
    }

    REQUIREMENT
    {
        name = AnyStarter
        type = Any

        hideChildren = true
        title = Must have opened up space tourism

        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract
            contractType = TourismContract
        }

        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract
            contractType = Tourism_FirstTourist
        }
    }

    REQUIREMENT
    {
        type = HasAstronaut
        minExperience = 2
    }
}
